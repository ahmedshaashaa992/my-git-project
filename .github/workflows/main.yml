name: Deploy Frontend to GitHub Pages

on:
  push:
    branches: ['main']
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: windows-latest
    env:
      PROJECT_DIR: 'frontend'  # Your frontend directory name

    steps:
      # 1. Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Verify directory structure (Windows compatible)
      - name: Validate project structure
        run: |
          echo "Current directory contents:"
          dir
          
          if not exist "%PROJECT_DIR%" (
            echo "::error::Project directory '%PROJECT_DIR%' not found!"
            exit 1
          )
          
          echo "Contents of %PROJECT_DIR%:"
          dir "%PROJECT_DIR%"
          
          if not exist "%PROJECT_DIR%\package.json" (
            echo "::error::package.json not found in %PROJECT_DIR%!"
            exit 1
          )

      # 3. Setup Node.js
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: '${{ env.PROJECT_DIR }}/package-lock.json'

      # 4. Install dependencies (Windows compatible)
      - name: Install dependencies
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          echo "Installing in directory: %cd%"
          if exist "package-lock.json" (
            npm ci
          ) else if exist "yarn.lock" (
            yarn install --frozen-lockfile
          ) else (
            npm install
          )

      # 5. Build project (Windows compatible)
      - name: Build project
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          npm run build
          # Fix asset paths in Windows
          (Get-Content "dist/index.html") -replace '/assets/', './assets/' | Set-Content "dist/index.html"
          # Create 404.html
          Copy-Item "dist/index.html" "dist/404.html"
          # Verify build
          dir "dist" /s

      # 6. Deploy to GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '${{ env.PROJECT_DIR }}/dist'

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4